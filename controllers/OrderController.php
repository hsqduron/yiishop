<?php
/**
 * Created by PhpStorm.
 * User: MBENBEN
 * Date: 2016/8/21
 * Time: 15:59
 */
namespace app\controllers;

use app\models\Address;
use app\models\Cart;
use app\models\Goods;
use app\models\Order;
use app\models\OrderGoods;
use app\models\User;
use Yii;

class OrderController extends CommonController{

    public function beforeAction($action)
    {
        if(empty(Yii::$app->session['username'])){
            $this->redirect(['member/auth']);
        }
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /* 订单结算页 */
    public function actionCheckout(){

        //指定页面使用的布局文件
        $this->layout = 'layout2';

        $order_id = Yii::$app->request->get('order_id');
        if(empty($order_id)){
            return $this->redirect(['order/index']);
        }
        //判断订单状态,非未付款订单不得进入订单结算页
        $status = Order::findOne($order_id)->status;
        if($status != Order::PAYNO){
            return $this->redirect(['order/index']);
        }

        //获取收货地址列表
        $username = Yii::$app->session['username'];
        $user_id = User::find()->where(['useremail'=>$username])->one()->id;
        $addressInfo = Address::find()->where(['user_id'=>$user_id])->all();

        //获取订单商品列表
        $orderGoodsInfo = OrderGoods::find()
            ->select('og.*,g.goods_img,g.goods_name')
            ->alias('og')
            ->leftJoin(Goods::tableName().' g','og.goods_id = g.id')
            ->asArray()
            ->all();

        //获取快递列表
        $expressInfo = Yii::$app->params['express'];

        //获取订单总价
        $orderAmount = Order::findOne($order_id)->amount;


        return $this->render('checkout',compact('addressInfo','orderGoodsInfo','expressInfo','orderAmount'));
    }

    /* 订单列表页 */
    public function actionIndex(){

        //指定页面使用的布局文件
        $this->layout = 'layout1';







       return $this->render('index');

    }

    /**
     * 生成订单
     */
    public function actionAdd()
    {
        $orderModel = new Order();

        $transaction = Yii::$app->db->beginTransaction();
        try {
            $username = Yii::$app->session['username'];
            //获取用户购物车中所有商品信息
            $cartInfo = Cart::find()
                ->alias('c')
                ->select('c.*,g.goods_price,u.id uid')
                ->leftJoin(Goods::tableName().' g','c.goods_id = g.id')
                ->leftJoin(User::tableName().' u','c.username = u.useremail')
                ->where(['c.username'=>$username])->asArray()->all();

            $amount = 0;
            foreach($cartInfo as $k=>$v){
                $amount += $v['goods_num'] * $v['goods_price'];
            }

            $orderModel->user_id = $cartInfo[0]['uid'];
            $orderModel->amount = $amount;
            $orderModel->status = Order::PAYNO;
            if(!$orderModel->save()){
                throw new \Exception;
            }

            $order_id = $orderModel->primaryKey;
            $orderGoodsModel = new OrderGoods();
            foreach($cartInfo as $k=>$v){
                $orderGoodsModel->order_id = $order_id;
                $orderGoodsModel->goods_num = $v['goods_num'];
                $orderGoodsModel->goods_price = $v['goods_price'];
                $orderGoodsModel->goods_id = $v['goods_id'];
                if(!$orderGoodsModel->save()){
                    throw new \Exception;
                }
                //清空购物车中的该商品
                Cart::deleteAll(['id'=>$v['id']]);
                //商品库存 减1
                Goods::updateAllCounters(['goods_num'=> -$v['goods_num']],['id'=>$v['goods_id']]);
            }

        //2张表都插入成功,则提交事务;
        $transaction->commit();

        }catch (\Exception $e){
//            var_dump($e->getMessage());die;
            //回滚
            $transaction->rollBack();
            $this->redirect(['cart/index']);
        }

        $this->redirect(['order/checkout','order_id'=>$order_id]);
    }


    /**
     * 当选择快递时,ajax改变订单总价
     */
    public function actionChangeAmount()
    {
       $order_id = Yii::$app->request->get('order_id');
       $express = Yii::$app->request->get('express');

        //获取快递所对应的运费
        $expressPrice = Yii::$app->params['express'][$express][1];
        $expressName = Yii::$app->params['express'][$express][0];

        //获取订单商品总价(不含运费)
        $orderGoodsInfo = OrderGoods::find()->where(['order_id'=>$order_id])->asArray()->all();
        $orderAmount = 0;
        foreach ($orderGoodsInfo as $k=>$v){
            $orderAmount += $v['goods_num'] * $v['goods_price'];
        }

        //重新计算订单总价并更新(加上运费)
        $amount = $orderAmount + $expressPrice;
        Order::updateAll(['amount'=>$amount],['id'=>$order_id]);

        //更新快递信息
        Order::updateAll(['express'=>$expressName],['id'=>$order_id]);

        //返回总价
        return json_encode(['amount'=>$amount]);

    }




}